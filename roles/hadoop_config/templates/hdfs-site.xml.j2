<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- {{ ansible_managed }} -->

<configuration>
  <property>
    <name>dfs.hosts.exclude</name>
    <value>/etc/hadoop/conf/dfs.hosts.exclude</value>
  </property>

  <!-- common server name -->
  <property>
    <name>dfs.nameservices</name>
    <value>{{ hadoop_config_site_name | lower }}</value>
  </property>

  <!-- HA configuration, see http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH4/latest/PDF/CDH4-High-Availability-Guide.pdf -->
  <property>
    <name>dfs.ha.namenodes.{{ hadoop_config_site_name | lower }}</name>
    <value>{% for host in groups[hadoop_config_namenode_group] %}nn{{ loop.index }}{% if not loop.last %},{% endif %}{% endfor %}</value>
  </property>

  {% for host in groups[hadoop_config_namenode_group] %}
  <property>
    <name>dfs.namenode.rpc-address.{{ hadoop_config_site_name | lower }}.nn{{ loop.index }}</name>
    <value>{{ hostvars[host].ipv4_address|default(hostvars[host]['ansible_default_ipv4']['address']) }}:8020</value>
  </property>
  {% endfor %}

  {% for host in groups[hadoop_config_namenode_group] %}
  <property>
    <name>dfs.namenode.http-address.{{ hadoop_config_site_name | lower }}.nn{{ loop.index }}</name>
    <value>{{ hostvars[host].ipv4_address|default(hostvars[host]['ansible_default_ipv4']['address']) }}:50070</value>
  </property>
  {% endfor %}

  <!-- Client failover -->
  <property>
    <name>dfs.client.failover.proxy.provider.{{ hadoop_config_site_name|lower }}</name>
    <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
  </property>

  <!-- Fencing configuration -->
  <property>
    <name>dfs.ha.fencing.methods</name>
    <value>shell(/bin/true)</value>
  </property>

  <!-- Automatic failover configuration -->
  <property>
    <name>dfs.ha.automatic-failover.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>ha.zookeeper.quorum</name>
    <value>{% for host in groups[hadoop_config_zookeeper_group] %}{{ hostvars[host].ipv4_address|default(hostvars[host]['ansible_default_ipv4']['address']) }}{% if not loop.last %},{% endif %}{% endfor %}</value>
  </property>

  <!-- Replication factor -->
  <property>
    <name>dfs.replication</name>
    <value>3</value>
    <final>true</final>
  </property>

  <property>
    <name>dfs.blocksize</name>
    <value>{{ hadoop_config_dfs_blocksize }}</value>
    <final>true</final>
  </property>

  <property>
    <name>dfs.journalnode.edits.dir</name>
    <value>/data/dfs/jn</value>
  </property>

  <property>
    <name>dfs.name.dir</name>
    <value>{% set comma = joiner(",") %}{% for dir in hadoop_config_dfs_name_dir %}{{ comma() }}{{ dir }}{% endfor %}</value>
  </property>

  <property>
    <name>dfs.data.dir</name>
    <value>{% set comma = joiner(",") %}{% for dir in hadoop_config_dfs_data_dir %}{{ comma() }}{{ dir }}{% endfor %}</value>
  </property>

  <property>
    <name>dfs.datanode.max.xcievers</name>
    <value>{{ hadoop_config_max_xcievers }}</value>
    <final>true</final>
  </property>

  <property>
    <name>dfs.namenode.handler.count</name>
    <value>40</value>
    <final>true</final>
  </property>

  <property>
    <name>dfs.datanode.handler.count</name>
    <value>8</value>
    <final>true</final>
  </property>

  <property>
    <name>dfs.namenode.avoid.read.stale.datanode</name>
    <value>true</value>
  </property>

  <property>
    <name>dfs.namenode.avoid.write.stale.datanode</name>
    <value>true</value>
  </property>

  <property>
    <name>dfs.namenode.stale.datanode.interval</name>
    <value>30000</value>
  </property>

  <property>
    <name>dfs.client.read.shortcircuit</name>
    <value>true</value>
  </property>

  <property>
    <name>dfs.domain.socket.path</name>
    <value>/var/run/hadoop-hdfs/dn._PORT</value>
  </property>

  <property>
    <name>dfs.client.file-block-storage-locations.timeout</name>
    <value>3000</value>
  </property>
</configuration>
