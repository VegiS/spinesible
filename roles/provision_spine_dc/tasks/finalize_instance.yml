---
- name: "Set provisioning EC2 tags for new instance: {{ ec2_new_instance.id }}"
  ec2_tag:
    resource: "{{ ec2_new_instance.id }}"
    region: "{{ ec2_region }}"
    profile: "{{ ec2_region }}"
    tags:
      Name: "{{ ec2_base_name }}-{{ ec2_new_instance.id | to_uuid | regex_replace('([a-f0-9]{8})-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', '\\1') }}"
      ansible_group: "{{ cur_role_name }}"
      hostname: "{{ ec2_base_name }}-{{ ec2_new_instance.id | to_uuid | regex_replace('([a-f0-9]{8})-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', '\\1') }}.{{ ec2_route53_zone }}"
      needs_bootstrap: True
      spine_section: "{{ spine_section_name }}"
  register: ec2_tag_response

- debug:
    var: ec2_tag_response

- name: "Create a new private DNS record for new instance: {{ ec2_new_instance.id }}"
  route53:
    command: create
    record: "{{ ec2_base_name }}-{{ ec2_new_instance.id | to_uuid | regex_replace('([a-f0-9]{8})-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', '\\1') }}.{{ ec2_route53_zone }}"
    value: "{{ ec2_new_instance.private_ip }}"
    zone: "{{ ec2_route53_zone }}"
    type: A
    ttl: 7200
    private_zone: yes
    profile: "{{ ec2_region }}"
  register: route53_response

- debug:
    var: route53_response

- name: "Create a new reverse DNS (PTR) record for new instance: {{ ec2_new_instance.id }}"
  route53:
    command: create
    record: "{{ ec2_new_instance.private_ip | ip_to_inaddr_record }}"
    value: "{{ ec2_base_name }}-{{ ec2_new_instance.id | to_uuid | regex_replace('([a-f0-9]{8})-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', '\\1') }}.{{ ec2_route53_zone }}"
    zone: "{{ ec2_new_instance.private_ip | ip_to_inaddr_zone }}.in-addr.arpa."
    type: PTR
    ttl: 7200
    private_zone: yes
    profile: "{{ ec2_region }}"
  register: route53_reverse_dns_response

- debug:
    var: route53_reverse_dns_response

- name: "Wait for SSH to come up on new instance {{ ec2_new_instance.id }} at: {{ ec2_new_instance.public_dns_name }}"
  wait_for:
    host: "{{ ec2_new_instance.public_dns_name }}"
    port: 22
    delay: 30
    timeout: 600
    search_regex: OpenSSH
  when: ec2_assign_public_ip

- name: Wait another 15 seconds before continuing to deal with EC2 flakiness
  pause:
    seconds: 15

- name: "Create and add EBS volume to new instance (if requested): {{ ec2_new_instance.id }}"
  ec2_vol:
    instance: "{{ ec2_new_instance.id }}"
    volume_size: "{{ ec2_ebs_size_gb }}"
    device_name: "{{ ec2_ebs_device_name }}"
    volume_type: "{{ ec2_ebs_volume_type }}"
    region: "{{ ec2_region }}"
    profile: "{{ ec2_region }}"
  when: ec2_create_ebs_volume
